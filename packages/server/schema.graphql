### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

scalar DateTime

type Link {
  createdAt: DateTime!
  id: String!
  organization: Organization
  organizationId: String
  slug: String!
  url: String!
  user: User!
  userId: String!
}

type Mutation {
  createLink(org: String, slug: String, url: String!): Link!
  createOrganization(domain: String!, name: String!): Organization!
  createSubscription(priceId: String!, token: String): String!
  destroyLink(id: String!): Link!
  destroyOrganization(id: String!): Organization!
  login(email: String!, password: String!): AuthPayload!
  logout: Boolean!
  register(email: String!, name: String!, password: String!): AuthPayload!
}

type Organization {
  createdAt: DateTime!
  domain: String!
  id: String!
  links(skip: Int): [Link!]!
  members(skip: Int): [User!]!
  name: String!
  owner: User!
  ownerId: String!
}

type Price {
  active: Boolean!
  id: ID!
  object: String!
  product: String!
  unitAmount: Int
}

type Product {
  active: Boolean!
  created: Int!
  description: String
  id: ID!
  livemode: Boolean!
  name: String!
  object: String!
  prices: [Price!]!
  type: String!
  updated: Int!
}

type Query {
  links: [Link!]!
  me: User
  organizations: [Organization!]!
  products: [Product!]!
  subscriptions: [Product!]!
  users: [User!]!
}

type User {
  createdAt: DateTime!
  email: String!
  id: String!
  links(skip: Int): [Link!]!
  name: String!
  stripeId: String
  tokenVersion: Int!
}
